/*
 * firhttp开源项目官方网址http://node.firadio.com
 * 特点：简单、快速、无压缩、无缓存、只处理动态页面、不放图片/JS/CSS
 * 如果修改代码请保留注释，并通过SVN提交上来.
 * SVN地址https://firadionode.googlecode.com/svn
 * SVN帐号密码获取请联系作者QQ:550220138获取
 * 如果您对firhttp的研究感兴趣，可以加入我们的QQ群26499890
*/
var events=require('events');
var path=require('path');
var fs=require('fs');
var ejs=require('ejs');
var httpset={};
var views_html={};
exports.dohttp=(function(buf){
	var http=firadio.http;
	var routes=firadio.routes;
	var model=firadio.model;
	var emitter=new events.EventEmitter();
	emitter.setMaxListeners(1);//限制一个够了吧
	//读取header,cookie,get,post
	var $_HEADER=http.getheader(buf);
	firadio.log2(' '+decodeURI($_HEADER['uri'])+' ');
	var $_COOKIE=http.get_cookie_info($_HEADER['Cookie']);
	var uri_info=http.get_uri_info($_HEADER['uri']);
	var $_GET=uri_info['get'];
	var $_POST=http.get_str_to_arr(buf.toString('utf8',$_HEADER['buf_headeroveri'],$_HEADER['buf_length']));
	var req={};
	req['header']=$_HEADER;
	req['cookie']=$_COOKIE;
	req['get']=$_GET;
	req['post']=$_POST;
	//下面开始页面输出
	//var html=firadio.date('Y-m-d H:i:s.K');
	routes.index($_GET['r'],emitter,req);//这个不用返回值
	return(emitter);
	//var html='';
});
exports.outhtml=(function(html){
	var html_length=new Buffer(html).length;
	var data="HTTP/1.1 200 OK\r\n";
	data+="Content-Type: text/html; charset=utf-8\r\n";
	data+="Pragma: no-cache\r\n";
	data+="Cache-Control: max-age=0\r\n";
	data+="Connection: Keep-Alive\r\n";
	data+="Content-Length: "+html_length+"\r\n";
	data+="\r\n"+html;
	return(data);
});
exports.get_cookie_info=(function(request){
	return({});
});
exports.get_str_to_arr=(function(request){
	requestarr=request.split('&');
	var $_GET={};
	for(var key in requestarr){
		var reqrow=requestarr[key].split('=');
		$_GET[decodeURIComponent(reqrow[0])]=decodeURIComponent(reqrow[1]);
	}
	return($_GET);
});
exports.get_uri_info=(function(uri){
	//说明：URI字符串到数组
	//首先找到[?]符号的位置
	var i=uri.indexOf('?');
	var uriarr={};
	uriarr['filepath']=decodeURIComponent(uri.substr(0,i));
	uriarr['request']=decodeURI(uri.substring(i+1,uri.length));
	uriarr['get']=exports.get_str_to_arr(uriarr['request']);
	//console.log(uriarr);
	return(uriarr);
});
exports.get_buf_postarr=(function(buf){
	//说明：buf中的header后面的字符，然后转换到数组
	return({});
});
exports.getheader=(function(buf){
	var header={};
	var datalen=buf.length;
	header['buf_length']=datalen;
	var linestr='',line_key='',line_value='';
	var stri_start=0;
	for(var linei=0;linei<=20;linei++){
		var line_keyi=0;line_key='';
		for(var index=stri_start;index<datalen;index++){
			if(buf[index]==13){
				//直到找到回车标记就break掉
				if(line_keyi>0){//在上次循环中所找到[: ]符号(冒号+空格)的位置
					//大于0说明找到过，所以正常取到数据
					line_value=buf.toString('utf8',line_keyi+2,index);
				}else if(linei==0){
					line_key='@';
					line_value=buf.toString('utf8',stri_start,index);
				}else{
					//如果什么都没找到，那说明指针已经到最后了
				}
				stri_start=index+2;//[\r\n]
				break;
			}else if(line_keyi==0){
				//如果本次找到就标记line_keyi，下次就不会找了
				if(buf[index]==58&&buf[index+1]==32){
					//找到[: ]符号
					line_keyi=index;
					line_key=buf.toString('utf8',stri_start,line_keyi);
				}
			}
		}
		if(line_key>''){
			header[line_key]=line_value;
			if(line_key=='@'){
				var arr=line_value.split(' ');
				header['method']=arr[0];
				//decodeURIComponent
				header['uri']=(arr[1]);
				header['http']=arr[2];
			}
			//console.log('['+line_key+'='+line_value+']');
		}else{
			header['buf_headeroveri']=stri_start;
			//console.log('['+linei+']');
			break;
		}
	}
	return(header);
});
exports.set=(function(name,value){
	//set(name,value);
	httpset[name]=value;
});
exports.ejs=(function(names,arr){
	var namearr=names.split(',');
	var html='';
	for(var key in namearr){
		var name=namearr[key];
		if(views_html.hasOwnProperty(name)){
			html+=views_html[name];
		}else{
			var data='';
			var templatepath=httpset['views_dir']+'/'+name+'.htm';
			if(path.existsSync(templatepath)){
				data=views_html[name]=fs.readFileSync(templatepath,'utf8');
			}else{
				data='无法载入['+name+']模版文件！<br />';
			}
			html+=data;
		}
	}
	try{
		html=ejs.render(html,arr);
	}catch(e){
		console.log('Error: ejs处理错误'+e);
	}
	return(html);
});